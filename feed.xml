<!DOCTYPE html><html><head><title>DockYard</title><link href="/stylesheets/all-c23d5f09.css" media="screen" rel="stylesheet" type="text/css" /><script src="/javascripts/all-ce68a29a.js" type="text/javascript"></script><meta content='NO-CACHE' http-equiv='CACHE-CONTROL'><meta content='DockYard is a Ruby on Rails, PostgreSQL, and, Ember.js, web / mobile application development software consultancy based in Boston, MA.' namer='description'><meta content='ruby on rails, rails, ruby, ruby on rails training, ruby application development, ruby on rails application development, ember application development, ember.js application development, software application development, web, web application development, mobile, mobile application development, ios, ios application development, iphone, iphone application development, android, android application development, postgres, startups, enterprise, Boston, MA, Massachusetts, for hire' name='keywords'><meta content='web development, mobile development, startups, enterprise, ruby on rails, rails, ruby, ruby on rails training, Boston, for hire' name='keywords'><meta content='width=device-width, initial-scale=1, maximum-scale=1, user-scalable=0' name='viewport'><meta charset='utf-8'><meta content='DockYard.com - ' name='description'><link href='//cloud.typography.com/6496052/702882/css/fonts.css' rel='stylesheet' type='text/css'><link href='http://dockyard.com/humans.txt' rel='author'><link href='/favicon.png' rel='shortcut icon' type='image/x-icon'><link href='/favicon.png' rel='icon' type='image/x-icon'><link href='/apple-touch-icon.png' rel='apple-touch-icon'><link href='/apple-touch-icon-precomposed.png' rel='apple-touch-icon-precomposed'><script>
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-24185112-2']);
    _gaq.push(['_trackPageview']);
  
    (function() {
      var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
      ga.src = ('https:' == document.location.protocol ? 'https://' : 'http://') + 'stats.g.doubleclick.net/dc.js';
      var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
    })();
</script>
<!--
                                             ..
                                           .O.
                                       .:OO.
                                      :OOO.
                                    :OOO:.
                         ...      :OOOO:
                   ..ZOOOOOOOOO..OZ.O.
                   OOOOOOOOOOOOOOOOI
                  OOOOOOOOOOOOOOOOI,
                 OOOOOOOO. .OOOOOOOO:
                 OOOOOOOO   OOOOOOOOO:
                OOOOOOOOOOOOOOOOOOOOO.
                OOOOOOOOOOOOOOOOOOOOO:
               .OOOOOOOOOOOOOOOOOOOOO:
               .OOOOOOOOOOOOOOOOOOOOO.
                OOOOOOOOOOOOOOOOOOOOO
                OOOOOO?:   .OOOOOOOOO
               .OOOOO      OOOOOOOOOO
,OO ZO,        OOOOO,     OOOOOOOOOO+
 OOOOO.        OOOOO     OOOOOOOOOOO+
  OOO?        OOOOO     .OOOOOOOOOOO:
   OOO,      OOOOO.    .OOOOOOOOOOOO
    OOOOOOOOOOOOO.    .OOOOOOOOOOOO.
     OOOOOOOOOOOO.  .OOOOOOOOOOOOO.
      8OOOOOOOOOOOOOOOOOOOOOOOODO:
         :OOOOOOOOOOOOOOOOOOOO::

--></head><body class='feed'><header><div class='extended-nav-wrap'><div class='l-wrap--wide'><nav class='extended-nav'><a class="extended-nav--logo" data-icon="⌂" href="http://dockyard.com/"><span class='is-hidden'>Home</span></a>
<a class="extended-nav--close" data-icon="X" href="#"><span class='is-hidden'>Close</span></a><div class='extended-nav__items'><div class='extended-nav__items--mobile'><a class="extended-nav__item--work extended-nav__item" href="#">Work</a><nav class='work-nav--mobile'><a href="http://dockyard.com/work/credit-card-reviews" class="work-nav-item"><strong class='work-nav-item__title'>Credit Card Reviews</strong></a>
<a href="http://dockyard.com/work/scratch" class="work-nav-item"><strong class='work-nav-item__title'>Scratch Wireless</strong></a>
<a href="http://dockyard.com/work/coachup" class="work-nav-item"><strong class='work-nav-item__title'>CoachUp</strong></a>
<a href="http://dockyard.com/work/askthem" class="work-nav-item"><strong class='work-nav-item__title'>AskThem</strong></a>
<a href="http://dockyard.com/work/beacon-hill-blitz" class="work-nav-item"><strong class='work-nav-item__title'>Beacon Hill Blitz</strong></a></nav></div><a class="extended-nav__item" href="http://dockyard.com/team">Our Team</a><a class="extended-nav__item" href="http://dockyard.com/process">Process</a><a class="extended-nav__item" href="http://dockyard.com/community">Community</a><a class="extended-nav__item active" href="/">Blog</a><a class="extended-nav__item" href="http://dockyard.com/hire-us">Hire Us</a></div></nav><nav class='work-nav'><h6>Selected Work</h6><a href="http://dockyard.com/work/credit-card-reviews" class="work-nav-item"><strong class='work-nav-item__title'>Credit Card Reviews</strong><p>Credit card advice from real people.</p></a>
<a href="http://dockyard.com/work/scratch" class="work-nav-item"><strong class='work-nav-item__title'>Scratch Wireless</strong><p>Never pay another penny for smartphone service.</p></a>
<a href="http://dockyard.com/work/coachup" class="work-nav-item"><strong class='work-nav-item__title'>CoachUp</strong><p>You should be training. Right now.</p></a>
<a href="http://dockyard.com/work/askthem" class="work-nav-item"><strong class='work-nav-item__title'>AskThem</strong><p>Ask officials questions on city, state, and federal levels.</p></a>
<a href="http://dockyard.com/work/beacon-hill-blitz" class="work-nav-item"><strong class='work-nav-item__title'>Beacon Hill Blitz</strong><p>How technology helped repeal the #TechTax.</p></a></nav></div></div><nav class='main-nav-wrap'><div class='main-nav l-wrap--wide'><a class="logo" href="http://dockyard.com">DockYard</a><a class="club-sandwich" data-icon="☰" href="#"><span class='is-hidden'>Navigation</span></a></div></nav></header><div class='push--header'></div><div class='l-wrap--blog'><a href="/"><strong class='logo--blog'>ReefPoints</strong><strong class='logo--blog__tagline'>Blog</strong></a><nav class='blog-nav'><a class="blog-nav__item " href="/">Posts</a><a class="blog-nav__item " href="/categories.html">Categories</a><a class="blog-nav__item " href="/authors.html">Authors</a></nav></div><?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blog Name</title>
  <subtitle>Blog subtitle</subtitle>
  <id>http://blog.url.com/</id>
  <link href="http://blog.url.com/"/>
  <link href="http://blog.url.com/feed.xml" rel="self"/>
  <updated>2015-03-19T00:00:00Z</updated>
  <author>
    <name>Blog Author</name>
  </author>
  <entry>
    <title>The Lean Project</title>
    <link rel="alternate" href="/2015/03/19/lean-project-management.html"/>
    <id>/2015/03/19/lean-project-management.html</id>
    <published>2015-03-19T00:00:00Z</published>
    <updated>2015-03-19T00:00:00Z</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;I am a firm believer in Lean processes aimed to maximize value while minimizing waste. When it comes to running projects in a Lean way, this goes far beyond the role of the Project Manager (or Scrum-master) thus requiring the right recipe of team, process, communication, work environment and pride. Often I am asked what are the typical practices I apply to projects which fall in the mobile/desktop application development context- this is my attempt to answer the question.  &lt;strong&gt;Important disclaimer&lt;/strong&gt; - this is not a prescription for how to run a project, nor does it guarantee success. The secret sauce is always the people NOT the process. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The Raw Materials&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If any of these seem unreasonable, you need to take a hard look at your team and work environment. Any concessions made here will reduce team effectiveness.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A team well-balanced in terms of seniority - Experience is contagious!&lt;/li&gt;
&lt;li&gt;Dedicated team members - not split across multiple projects&lt;/li&gt;
&lt;li&gt;Co-located team members&lt;/li&gt;
&lt;li&gt;Smaller teams (no more than 5-7) —  Once you breach this team size communication complexity increases exponentially.&lt;br&gt;&lt;/li&gt;
&lt;li&gt;Conduct retrospectives with full participation - Always seek to get better&lt;/li&gt;
&lt;li&gt;A knowledge management strategy ensures team members know where to store/post directional artifacts that other team members require to do their job (e.g. Wireframes, PSDs, Test Cases, Context Diagrams )&lt;/li&gt;
&lt;li&gt;Use of Information Radiators — Physical views into plans (e.g. Post-Its on a whiteboards) that may supplement a digital plan view&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;1) Breakdown the work&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Decomposition of capabilities/features is a necessary and somewhat painful evil.  However, you do not need to go to a painful level of detail to create this artifact.  The importance is breadth not necessarily depth.  The depth only needs to go as far as necessary for the team to directionally understand where a feature needs to go. If a team member is able to provide some form of time estimate (best and worst case) for one of those lower level items, you&amp;#39;re low level enough. If estimates are coming out to less then 1 day you have likely gone too far.  Get the full team involved, apply the 80/20 rule in terms of completeness and time-box the activity.  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2) Define a Path&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Once you have step 1 in place, work with the team to derive a chronological execution of the work driven by perceived value and/or risk/complexity of a given feature.  Front loading your risk/complexity (as long as it is somewhat high value) is a very acceptable and smart approach because impact of course correction early on is much less invasive than the alternative.   Ensure a basic architecture for the overall solution is derived and communicated. This ensures that the team has a solid foundation to build upon.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3) Respect the &lt;a href="http://en.wikipedia.org/wiki/Project_management_triangle"&gt;Pyramid of constraint&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Scope, Time and Cost —  Fundamental variables applicable to any project context.  Visibility and active monitoring of these variables is essential to ensure project success.  First and foremost, ensure that a baseline is established for each of these variables before a team even start the project. Understand how your stakeholders rate the relative importance of each of these variables and uphold the &amp;quot;Rule&amp;quot; that trade-offs are the only way these baselines can/will adjust.   Deferring this activity to after a project gets going can result in scope creep and cost/time over runs.  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4) Hold up the mirror&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;As a PM, it’s your responsibility to hold up a mirror in front of your team that shows the good, the bad, and the ugly.  This allows the team to maintain appreciation for the big picture while they do their best to work through the small one.   I am huge advocate of a plan view that I have written about in the past (&lt;a href="http://reefpoints.dockyard.com/2014/07/29/project-carpe-diem.html"&gt;High and Mid-Level Plans&lt;/a&gt;) — which shows time, features, tasks, distribution of work across team capability areas (Design, Backend, UXD, etc.), progress made, unplanned work and deffered work that will come in later releases.  If you have this and revisit it often- consider your team informed and that those Triangle of Constraint variables are being monitored (for the most part.)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5) Create an environment of ownership and accountability&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Everyone is a player. PM’s should be servant leaders, therefore any plan created needs to be the team&amp;#39;s plan not he PM’s (or Sr. Mgmt.)  This way the team has accountability and ownership rights over what ever happens to the plan.  If something is not going as planned the team can understand the implications of this and course correct and work to reveal why something my not be working out.  Constant readjustment and calibration is required to keep things moving along. The project manger helps ensure these conversations happen.&lt;/p&gt;

&lt;p&gt;No team member can slip into the shadows. To be successful every contributor needs to have a voice.  A PM needs to put their “Facilitation” hats on and ensure they proactively encourage all to participate and chime in on team affairs. That’s the beauty of teams. They succeed together, not as individuals. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;6) Demonstrate Progress&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Demos encourage quality, because no one wants to demo something that works and looks subpar. Stakeholders  can rest assured they did not buy snake oil and value is being delivered in some regular interval.  Demonstrations affirm you&amp;#39;re heading in the right direction.  Last but not least, demos allow the team to celebrate success in short bursts - It feels great to get something done especially when the road ahead is a long one !&lt;/p&gt;

&lt;p&gt;Give it a go and let me know if this works for your team.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>The Doldrums of Consulting</title>
    <link rel="alternate" href="/2015/03/18/the-doldrums-of-consulting.html"/>
    <id>/2015/03/18/the-doldrums-of-consulting.html</id>
    <published>2015-03-18T00:00:00Z</published>
    <updated>2015-03-18T00:00:00Z</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;&lt;img src="http://i.imgur.com/X6DGygm.jpg" alt="http://i.imgur.com/X6DGygm.jpg"&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;The Doldrums&lt;/em&gt; is a sailing term. It means when you&amp;#39;re stuck on the
water with no wind. Your only option is to wait for the wind to pick up
so you can continue on your way.&lt;/p&gt;

&lt;p&gt;DockYard is currently in the doldrums.&lt;/p&gt;

&lt;p&gt;Maybe this isn&amp;#39;t something that a consultancy should publicly admit,
but we&amp;#39;ve seen client engagement significantly dry up for us in the past
month and a half. Where we were selling and turning clients away a few
months ago, we are struggling to close a single deal right now. This is
the ebb and flow of consulting, it happens. Our only option is to wait
for the wind to pick up so we can continue on our way.&lt;/p&gt;

&lt;p&gt;I was speaking with a few other software (Ember) consultancies recently
and they voiced similar stories. I am not certain why Ember has seen
such a steep drop off in interest. One theory is that Ember is currently
in the &lt;em&gt;Trough of Sorrow&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src="http://i.imgur.com/hkzpuBa.png" alt="http://i.imgur.com/hkzpuBa.png"&gt;&lt;/p&gt;

&lt;p&gt;Does a framework follow similar trends to a startup? Perhaps. In any
event, we&amp;#39;re now trying to diversify our offerings. I announced last
week that DockYard is now offering Staff Augmentation services. This has
piqued some interest but we&amp;#39;re seeing a lot of inquiries for starting a
few months from now.&lt;/p&gt;

&lt;p&gt;It is funny because I know in a month or two we&amp;#39;ll be fine. We just have
to survive the thin times, which is always stressful. How we weather
this will speak a lot about DockYard as a company. It is said the only
way to survive the &lt;em&gt;Trough of Sorrow&lt;/em&gt; is going to be company culture. If
this is true then I&amp;#39;m quite confident in us.&lt;/p&gt;

&lt;p&gt;I also realize that we&amp;#39;re towards the end of a financial quarter.
Companies tend to reach out after the start of a quarter, but if I were
them I wouldn&amp;#39;t wait. If companies were to &lt;a href="http://dockyard.com/contact"&gt;contact
us&lt;/a&gt; now they would find us in a position that
would be easy to negotiate with.&lt;/p&gt;

&lt;p&gt;I&amp;#39;d be interested in hearing from other shops: have you experienced The
Doldrums? What pulled you through? What strategies have you put in place
to avoid them in the future?&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Thriving in a New Work Environment</title>
    <link rel="alternate" href="/2015/03/16/thriving-in-a-new-work-environment.html"/>
    <id>/2015/03/16/thriving-in-a-new-work-environment.html</id>
    <published>2015-03-16T00:00:00Z</published>
    <updated>2015-03-16T00:00:00Z</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h2&gt;My Background&lt;/h2&gt;

&lt;p&gt;If you asked me a month and a half ago when I was living and working near Philadelphia as a Director of digital communications, “Cory what are the chances that you will be in Boston working for a new company?”. I would have said you were crazy and I couldn’t see myself leaving the Philly area unless a company blew me away with their culture and work environment. How would I watch my Sixers, Eagles, and Phillies games if I left the Philly area?&lt;/p&gt;

&lt;p&gt;Then in a week and a half frenzy I was moving up to Boston after it had just snowed another two feet in Boston. A day after that I had moved in to my new apartment and it was my first day at DockYard as a Junior UX Developer!&lt;/p&gt;

&lt;p&gt;Fast forward a week and I had met 16 new DockYard co-workers (who, yes, are crazy smart) and was introduced to a new coding/project management environment. I was then challeneged to learn how to  structure my SCSS with the
&lt;a href="https://github.com/dockyard/styleguides/blob/master/uxd/class-naming-conventions.md"&gt;BEM&lt;/a&gt;
class naming conventions and rules for Scalable and Modular Architecture for CSS
(&lt;a href="https://github.com/dockyard/styleguides/blob/master/uxd/beginning-a-project.md"&gt;SMACSS&lt;/a&gt;), all of this  was a tidal wave of new information and personally a different way of thinking.&lt;/p&gt;

&lt;h2&gt;It’s Not All About You&lt;/h2&gt;

&lt;p&gt;I would love to say that the sole reason that I’ve been able to handle all the new information is that I am purely that awesome. But in reality I could not have gotten through any of this without the work environment DockYard has implemented.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://reefpoints.dockyard.com/2015/01/16/joining-dockyard.html"&gt;Estelle&lt;/a&gt; and
&lt;a href="http://reefpoints.dockyard.com/office/2013/07/09/first-month-at-dockyard.html"&gt;Marin&lt;/a&gt; explain how “Wicked Good” the DockYard team is and do so better than I can, but from my experience after a month of working here it is clear that everyone wants to help each other (new guy included). If you need help and you’re not approaching other team members with questions, you might find yourself out of place.&lt;/p&gt;

&lt;p&gt;This type of atmosphere is exactly what you need for soaking in all the information you receive at a new job. You will always have questions and uncertainties in a new environment like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Am I meeting their expectations&lt;/li&gt;
&lt;li&gt;Am I messing this up&lt;/li&gt;
&lt;li&gt;Will I look stupid if I ask this question&lt;/li&gt;
&lt;li&gt;What will they think if...&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It is inevitable to have these questions when you are in a new work place and you should have them, don&amp;#39;t be afraid to solve those concerns by asking productive questions! The new company you just joined would rather be asked a stupid question then see you running in circles not willing to interact with the team.&lt;/p&gt;

&lt;p&gt;I have asked many questions in my first month here and not once has someone:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Said no&lt;/li&gt;
&lt;li&gt;Told me there was no point to my question&lt;/li&gt;
&lt;li&gt;Looked down on me for not knowing something&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That is a testament to DockYard but also should be how any team should be run, especially web development teams.&lt;/p&gt;

&lt;h2&gt;Success Is Ultimately Decided By You&lt;/h2&gt;

&lt;p&gt;Now it’s not all up to the team you are joining to make you successful, you have to be willing to do the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Put time into reading about things you did not understand&lt;/li&gt;
&lt;li&gt;Research tools/techniques that you see yourself using in the future&lt;/li&gt;
&lt;li&gt;Be open minded with new development techniques and a new project management process&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you are successful with goals/projects your boss gives you, then you are meeting your employers standards. In the web development line of work in order to thrive in an environment you should be going above what is expected of you.&lt;/p&gt;

&lt;p&gt;When coworkers look at your work they should be impressed and surprised with:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The product you are presenting&lt;/li&gt;
&lt;li&gt;How quick and thorough you are when learning new things&lt;/li&gt;
&lt;li&gt;Contributions you make to current projects&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When you are getting those type of reactions to the list above you are thriving in the new work environment.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&amp;quot;Thriving in a new work environment comes from working harder and more efficiently than expected&amp;quot;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Be willing to be one of the first people at the office and leave later than most, you want to soak in as much information as you can. When you are given new things to learn tackle them immediately.&lt;/p&gt;

&lt;p&gt;During all the chaos of starting a new job stay organized and keep notes of things you are learning, you will probably not remember that Git command after one or two uses.&lt;/p&gt;

&lt;p&gt;If you find yourself in a new work environment and feel overwhelmed just remember to ask as many questions as you can and work hard to understand the solutions your team provides you.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Ask good questions</title>
    <link rel="alternate" href="/2015/03/11/ask-good-questions.html"/>
    <id>/2015/03/11/ask-good-questions.html</id>
    <published>2015-03-11T00:00:00Z</published>
    <updated>2015-03-11T00:00:00Z</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;In an &lt;a href="http://reefpoints.dockyard.com/2015/02/11/managing-the-conversation.html"&gt;earlier post&lt;/a&gt;, I focused on the challenges of leading a good user interview. Today, I’d like to focus on one rule about asking questions to get reliable results.&lt;/p&gt;

&lt;h2&gt;Ask open-ended questions.&lt;/h2&gt;

&lt;p&gt;Otherwise, the responses you get will be either biased or useless. &lt;/p&gt;

&lt;h2&gt;Let&amp;#39;s look at some interview questions (from worst to best)&lt;/h2&gt;

&lt;p&gt;They appear in order: from least useful to most useful in getting you good responses. For context, imagine you’re doing some user research and you&amp;#39;re in the middle of a project to design some widgets.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;“You like this widget in green, right? We picked green because it’s calming.”&lt;/strong&gt;
This question is so bad it&amp;#39;s grotesque, but it may still happen to novice interviewers. Not only does the question suggest a specific answer (you like it!), but it also gives reasons why that answer might be the right one (green is calming!) The interviewee is not likely to share a genuine opinion with this much pressure to say “yes, I love it in green!”.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;“How do you feel about this widget? Do you like its color?”&lt;/strong&gt; Slightly better, but still of limited use. By suggesting a response and allowing the user to narrow it down to a binary yes/no, we’re getting a very limited amount of information back. In addition, likes and dislikes move the conversation into a potentially awkward area. Some people may not be comfortable telling you they don’t like something you made.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;“How do you feel about this widget? What do you think it does?”&lt;/strong&gt; Now, this is better. We are opening up to qualitative responses with lots of detail. By not suggesting options for what an answer might be, we are more likely to get unexpected, valuable results.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;“Talk me through what you see here.”&lt;/strong&gt; A super open-ended question, useful in the beginning of an interview. Do they even see the widget?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;“How would you normally approach (widget-related task)?”&lt;/strong&gt; This seems to be the best opening question for a user interview. While not appropriate for all circumstances, it is great at opening up areas you may not have considered to be in the scope of the project. This question can help reframe the problem you are working to solve.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;“How did you last (widget-related task)?”&lt;/strong&gt; Past behavior is a more reliable indicator than a behavior people might describe as their normal. So, this re-phrasing can encourage more honest answers. &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You may notice that it takes more  time to ask open-ended questions. You may trigger your interviewee to share a lot of extra information, not just a concise answer to the question you asked. You may have to follow up with more questions to get to the “why” behind a certain behavior. But with the increased effort comes a better result. The responses are real. They are not influenced by your opinion about the thing you’re asking, because you’ve kept that opinion outside the questions. These responses present a more nuanced picture of your users’ needs and environment.&lt;/p&gt;

&lt;p&gt;I condensed this principle from conference talks, books and workshops I attended over the past few years. Two sources in particular: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://twitter.com/michelleyaiser"&gt;Michelle Yaiser&amp;#39;s&lt;/a&gt; talk on user research at &lt;a href="http://uxeast.org/"&gt;UX Camp&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://shop.npr.org/sound-reporting"&gt;Sound reporting : the NPR guide to audio journalism and production&lt;/a&gt;. This book is outside of the usual UX Design reading list, but it&amp;#39;s useful for interviewing skills. It shows how much  effort and consideration it takes a journalist to gather information in a neutral, ethical way.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It&amp;#39;s almost always a better investment of your time to conduct a few in-depth, “difficult” and neutral interviews, than to rush many interviewees through surface-level questions. This is especially true at the beginning of a project, when more design options are open. Your effort to keep the process unbiased will yield quality results, and quality wins.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>DockYard is now accepting staff augmentation Ember.js contracts</title>
    <link rel="alternate" href="/2015/03/09/dockyard-is-now-accepting-staff-augmentation-ember-js-contracts.html"/>
    <id>/2015/03/09/dockyard-is-now-accepting-staff-augmentation-ember-js-contracts.html</id>
    <published>2015-03-09T00:00:00Z</published>
    <updated>2015-03-09T00:00:00Z</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;Over the past three years DockYard has primarily taken on &amp;quot;greenfield&amp;quot;
projects, where we are responsible for building applications from
scratch through design, development, and launch. Starting today we&amp;#39;re
adding Ember.js Staff Augmentation to the services we provide to our
clients.&lt;/p&gt;

&lt;p&gt;If you are looking to add an Ember.js expert to help your team you
should contact us. Our entire engineering team is extremely experienced
in Ember.js application development, Ember.js best practices, and Ember.js Test Driven
Development. We can help your team finish existing features, guide
your team on how to properly build an Ember.js application, and help you
hit your delivery deadline.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://dockyard.com/contact"&gt;Visit our contact page and choose
&amp;quot;Staff Augmentation&amp;quot; for the Budget&lt;/a&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>EmberConf 2015 Day 2</title>
    <link rel="alternate" href="/2015/03/04/ember-conf.html"/>
    <id>/2015/03/04/ember-conf.html</id>
    <published>2015-03-04T00:00:00Z</published>
    <updated>2015-03-04T00:00:00Z</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h1&gt;Fault Tolerant UX by Dan Gebhardt&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://github.com/dgeb"&gt;@dgeb&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Users should be shielded from any application issues that are encountered&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Transaction UX&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Atomic: all or nothing

&lt;ul&gt;
&lt;li&gt;Ex. if a user fills out a form your app should save all the data, not just some.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Consistent: move between different states&lt;/li&gt;
&lt;li&gt;Isolated: allows concurrent changes&lt;/li&gt;
&lt;li&gt;Durable: changes are persisted&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Apps MUST NOT violate the rules of transactional UX or you are violating the users trust&lt;/h3&gt;

&lt;h2&gt;Forgiving User Experience&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Fault Tolerant UX --&gt; Forgiving UX&lt;/li&gt;
&lt;li&gt;Transitional experience: to persist data that has not yet be saved, but in the process of being edited&lt;/li&gt;
&lt;li&gt;Undo/redo&lt;/li&gt;
&lt;li&gt;Offline support&lt;/li&gt;
&lt;li&gt;Asynchronous interface (non-blocking)

&lt;ul&gt;
&lt;li&gt;user can make changes as quickly as possible (changes can be queued up and synced at your apps convenience)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Engineering Fault Tolerant UX&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Ember provides simple elgant patterns for building a consistent UX&lt;/li&gt;
&lt;li&gt;Similarly, ember data provides durable UX&lt;/li&gt;
&lt;li&gt;Ember data requires customization (extra code) to provide atomic and isolated code&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;&lt;a href="https://github.com/orbitjs"&gt;Orbit&lt;/a&gt;&lt;/h2&gt;

&lt;h3&gt;Orbit application patterns&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Client first development&lt;/li&gt;
&lt;li&gt;Pluggable sources&lt;/li&gt;
&lt;li&gt;Data synchronization&lt;/li&gt;
&lt;li&gt;Editing contexts&lt;/li&gt;
&lt;li&gt;Undo/redo&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;&lt;a href="https://github.com/orbitjs/ember-orbit"&gt;ember-orbit&lt;/a&gt;&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Provides a store with synchronous and asynchronous methods&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;Aligning Ember with Web Standards by Matthew Beale&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://github.com/mixonic"&gt;@mixonic&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;Standards&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;The JS standardization process is about to change: ES5, ES6, ES2015!&lt;/li&gt;
&lt;li&gt;Standards Process

&lt;ul&gt;
&lt;li&gt;5 stages - strawman, proposal(polyfills), draft(experimental), candidate(compliant), finished(shipping)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://remysharp.com/2010/10/08/what-is-a-polyfill"&gt;Polyfill&lt;/a&gt;: A polyfill is a piece of code (or plugin) that provides the technology that you expect the browser to provide natively. &lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;2 major standards groups:

&lt;ul&gt;
&lt;li&gt;WHATWG + W3C (html / dom related)&lt;/li&gt;
&lt;li&gt;TC39 + Ecma International (promises, classes, for loops, etc)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Aligning with standards is not a one time event. It is ongoing!&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Why Standards?&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;The goal is productivity&lt;/li&gt;
&lt;li&gt;Standards are portable, reflect best preactices, and endure &lt;/li&gt;
&lt;li&gt;Participants win&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;ES5 -&gt; ES2015&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;New API for maps&lt;/li&gt;
&lt;li&gt;Promises&lt;/li&gt;
&lt;li&gt;Proxies&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Babel&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Babel will turn your ES6+ code into ES5 friendly code

&lt;ul&gt;
&lt;li&gt;Enables new syntax (fat arrow, let) , APIs (map, set), not everything&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Aligning Ember&amp;#39;s Object Model&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt; is this feature: stable? a good pattern? implemented correctly? implemented performantly?&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;ES Classes&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Three new tools: class, extend, super&lt;/li&gt;
&lt;li&gt;More gotchas: 

&lt;ul&gt;
&lt;li&gt;setUnknownProperty &lt;/li&gt;
&lt;li&gt;Transpiler output&lt;/li&gt;
&lt;li&gt;New syntax&lt;/li&gt;
&lt;li&gt;Changes in way that super behaves&lt;/li&gt;
&lt;li&gt;Mixins&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Remember: standards are a two-way street!&lt;/p&gt;

&lt;p&gt;&lt;a href="http://www.201-created.com/ember-community-survey-2015"&gt;Ember Community Survey&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;Growing Ember One Tomster at a Time by Jamie White&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://github.com/jgwhite"&gt;@jgwhite&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;How did a tech community come to be so vibrant? How can we continue?&lt;/p&gt;

&lt;h2&gt;1. The Tomster&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Representation of productivity and friendliness&lt;/li&gt;
&lt;li&gt;Tomster wore different hats

&lt;ul&gt;
&lt;li&gt;Custom tomsters&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Good defaults

&lt;ul&gt;
&lt;li&gt;Having a friendly mascot makes things easier.&lt;/li&gt;
&lt;li&gt;“Ambition” and “friendliness” is hard to juxtapose&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Composing concepts&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;2. Language&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Tomster is a tool. Productivity and friendliness implicitly part of conversation

&lt;ul&gt;
&lt;li&gt;Words stick; the right words enable conversations&lt;/li&gt;
&lt;li&gt;“hack” is not a good vocabulary word - negative connotation &lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;3. User Interface&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Programming language and documentation with good user interface&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;4. Hackability&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Parts have to be accesible - has to feel hackable.

&lt;ul&gt;
&lt;li&gt;Tomster was not overly done.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;5. Roles&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Many specialisms in Ember Community: documenteer, student, mentor, critic, explorer, and many more!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Community building is a design and engineering challenge&lt;/p&gt;

&lt;h1&gt;Interaction Design with Ember 2.0 and Polymer by Bryan Langslet&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://github.com/blangslet"&gt;@blangslet&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The web browser is the largest app runtime in the world, and will continue to grow&lt;/li&gt;
&lt;li&gt;Every device has to be connected to the web&lt;/li&gt;
&lt;li&gt;Web frameworks and toolkits are getting closer to native performance everyday &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&amp;quot;How can I - one person with a laptop - leverage my time as powerfully as I possibly can, every minute I work?&amp;quot;&lt;/p&gt;

&lt;h2&gt;Ember-Flow&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;A paradigm shift for web interaction design&lt;/li&gt;
&lt;li&gt;The goal: to blur the lines between native and web applications&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Web Components&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Extends the browser itself

&lt;ul&gt;
&lt;li&gt;Polymer components extend a base component&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Encapsulation&lt;/li&gt;
&lt;li&gt;Declarative&lt;/li&gt;
&lt;li&gt;True reusability/portability&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Ember vs. Polymer Use Cases:&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Ember: developer productivity, conventions&lt;/li&gt;
&lt;li&gt;Ember: community&lt;/li&gt;
&lt;li&gt;Ember: World-class routing and state management&lt;/li&gt;
&lt;li&gt;Polymer: constantly pushing the web forward&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Web Animations API&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Has the best of both CSS and javascript animations&lt;/li&gt;
&lt;li&gt;Web animations run outside of the main thread and can be accelerated on the GPU&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;&lt;a href="https://github.com/blangslet/treasure-hunt"&gt;Treasure Hunt Demo Application&lt;/a&gt;&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&amp;quot;Demonstrates an experimental integration between ember.js routing and Polymer&amp;#39;s core-animated-pages component to create beautiful inter-state animated transitions&amp;quot;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;Building Applications for Custom Environments with Ember CLI by Brittany Storoz&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://github.com/brittanystoroz"&gt;@brittanystoroz&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Ember CLI&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Everyones favorite command line tool&lt;/li&gt;
&lt;li&gt;Build organized ember apps quickly&lt;/li&gt;
&lt;li&gt;Fills huge void in toolset for JS devs&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Ember CLI Addons&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Extend ember-cli beyond core fucntionality&lt;/li&gt;
&lt;li&gt;Follow standard npm conventions&lt;/li&gt;
&lt;li&gt;Easy to create &amp;amp; install:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;ember addon name-of-your-addon&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;ember install:addon name-of-your-addon&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;Firefox OS&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Requirements that Ember CLI could not provide

&lt;ol&gt;
&lt;li&gt;Generate and validate a manifest file (same concept as package.json)&lt;/li&gt;
&lt;li&gt;UI components that mimic OS interface&lt;/li&gt;
&lt;li&gt;Publish to Firefox marketplace&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;Ember CLI Addon was born to fill those requirements.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;1st Requirement: Generating The Manifest&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Creating Blueprints

&lt;ul&gt;
&lt;li&gt;rules for generating common code and file structures:&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;ember generate blueprint name-of-blueprint&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;2nd Requirement: FirefoxOS UI (&lt;a href="https://github.com/gaia-components/gaia-tabs"&gt;Gaia&lt;/a&gt;)&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Building components
&lt;code&gt;bower install gaia-components/gaia-stubs&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;2 responsibilities:

&lt;ul&gt;
&lt;li&gt;including dependencies and creating the addon&lt;/li&gt;
&lt;li&gt;making both available to the consuming application&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Components Review&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Dependencies:

&lt;ul&gt;
&lt;li&gt;bower install within addon&lt;/li&gt;
&lt;li&gt;bower install withing consuming logic&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Component logic

&lt;ul&gt;
&lt;li&gt;create component&lt;/li&gt;
&lt;li&gt;export components to consuming aplication&lt;/li&gt;
&lt;li&gt;define component template&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Validation &amp;amp; Publishing

&lt;ul&gt;
&lt;li&gt;creating commands for control over when these things happen&lt;/li&gt;
&lt;li&gt;&lt;code&gt;includedCommands&lt;/code&gt; hook: returns object of commands which are found inside &lt;code&gt;lb/commands&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ember help&lt;/code&gt; lists out information about available add-on commands. And lots more useful info.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;Building Real-time Applications with Ember by Steve Kinney&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://github.com/stevekinney"&gt;@stevekinney&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Integrating browser functionality and third party code into our applications. In this case, WebSockets.&lt;/li&gt;
&lt;li&gt;What is a WebSocket Used for? 

&lt;ul&gt;
&lt;li&gt;Collaboration, analytics dashboards, prompting user to upgrade application&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Can I actually use WebSockets? 

&lt;ul&gt;
&lt;li&gt;For the most part, yes (some earlier version of IE not supported)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Socket.io -&gt; library for Node&lt;/li&gt;
&lt;li&gt;Faye  -&gt; simple pub/sub messaging&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Approach #1: Use Standalone Controller&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Somewhat limited because it only works between controllers&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Approach #2: Dependency Injection with Services&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ember generate service websocket&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Declare where you want to inject it inside the Initializer&lt;/li&gt;
&lt;li&gt;Inside controller: &lt;code&gt;websocket: Ember.inject.service()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Approach #3 Using Socket.io&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Socket.io is both a server and client side library&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="bit.ly/js-poll"&gt;What is your favorite thing about JavaScript?&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;Minitalks!&lt;/h1&gt;

&lt;h2&gt;1. Measuring Performance with User Timing API by Bill Heaton&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://github.com/pixelhandler"&gt;@pixelhandler&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Measuring the differences in template rendering speeds between Ember.js v1.8.1 w/Handlebars v1.3 and Ember.js v1.10.0 w/HTMLBars&lt;/li&gt;
&lt;li&gt;Check out his findings on &lt;a href="http://pixelhandler.com/posts/measuring-performance-with-user-timing-api-in-an-ember-application"&gt;blog!&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;2. &lt;code&gt;ember-islands&lt;/code&gt; by Mitch Lloyd&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://github.com/mitchlloyd"&gt;@mitchlloyd&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/mitchlloyd/ember-islands"&gt;&lt;code&gt;ember-islands&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Render Ember components UJS-style to achieve &amp;quot;Islands of Richness&amp;quot;. You can arbitrarily render Ember components in the body of the page and they will all be connected to the same Ember app.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;3. Ember Testing with Chemistry Dog by Liz Bailey&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://github.com/lizzerdrix"&gt;@lizzerdrix&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Migration from Rails to Ember&lt;/li&gt;
&lt;li&gt;Ember does not provide as much documentation on testing&lt;/li&gt;
&lt;li&gt;Would love to help make Ember more approachable to beginners&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;4. Running C++ in ember-cli with Emscripten by Michael Nutt&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://github.com/mnutt"&gt;@mnutt&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/movableink/ember-cli-emscripten"&gt;&lt;code&gt;ember-cli-emscripten&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Allows you to add C or C++ to your ember app, then require the exposed functions and classes.&lt;/li&gt;
&lt;li&gt;Fibonacci sequence demo!&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;5. Ember Observer by Kate Gengler&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://github.com/kategengler"&gt;@kategengler&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/emberobserver/client"&gt;Ember Observer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Gives addons a score out of 10&lt;/li&gt;
&lt;li&gt;pulls hourly from npm and Github&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;6. CSS is Hard by Erik Bryn&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://github.com/ebryn"&gt;@ebryn&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ebryn/ember-component-css"&gt;&lt;code&gt;ember-component-css&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;namespaces our component styles automatically!&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;Physical Design by Edward Faulkner&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://github.com/ef4"&gt;@ef4&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Computers are so abstract. Possibilities are endless, only hindered by your imagination.&lt;/li&gt;
&lt;li&gt;Constrained by physics&lt;/li&gt;
&lt;li&gt;Googles material design spec

&lt;ul&gt;
&lt;li&gt;does not break rules of physics&lt;/li&gt;
&lt;li&gt;animations and motion appeal to us because they fit into our idea of how it should physically work.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ef4/liquid-fire"&gt;Liquid Fire&lt;/a&gt; live demo!

&lt;ul&gt;
&lt;li&gt; &lt;code&gt;npm install —save-dev liquid-fire&lt;/code&gt; for Ember 1.11+&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://miguelcobain.github.io/ember-paper"&gt;Ember Paper&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;Closing Keynote: Chris Eppstein&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://github.com/chriseppstein"&gt;@chriseppstein&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;Announcing: Eyeglass&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Distribute SASS extensions as NPM modules for &lt;a href="https://github.com/sass/libsass"&gt;LIBSASS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Will be able to integrate with a number of different build systems, including Ember CLI&lt;/li&gt;
&lt;li&gt;Major performance improvements&lt;/li&gt;
&lt;li&gt;The best parts of SASS and Compass, working with the best tools JS has to offer&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;A Selection of Chris&amp;#39; Inspirational Messages&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&amp;quot;Don&amp;#39;t be a Sasshole&amp;quot;&lt;/li&gt;
&lt;li&gt;&amp;quot;People come to a community for the tech, but stay for the love!&amp;quot;&lt;/li&gt;
&lt;li&gt;&amp;quot;Sass didn&amp;#39;t lose when I started ignoring the haters&amp;quot;&lt;/li&gt;
&lt;li&gt;&amp;quot;If you use a framework you love, you&amp;#39;ll never work a day in your life&amp;quot;&lt;/li&gt;
&lt;li&gt;&amp;quot;Secret to a vibrant community: be excellent to eachother&amp;quot;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
</feed>
<div class='push--footer'></div><footer><div class='l-wrap'><div class='l-footer-group'><h3 class='footer-group__title'>EVENTS</h3><a class="footer__event--wgc" target="_blank" href="http://wickedgoodember.com/">Wicked Good Ember Conf</a><a class="footer__event--ember" target="_blank" href="http://www.meetup.com/Boston-Ember-js/">Boston Ember.js Meetup</a><a class="footer__event--openhack" target="_blank" href="http://openhack.github.io/boston/">OpenHack Boston</a><a class="footer__event--ux" target="_blank" href="http://www.meetup.com/uxboston/">UX Boston Meetup</a><a class="footer__event--swift" target="_blank" href="http://www.meetup.com/Boston-Swift/">Boston Swift</a><a class="footer__event--uxhh" target="_blank" href="http://www.uxhappyhour.com/bos">UX Happy Hour</a></div><div class='l-footer-group'><a href="/"><h3 class='footer-group__title'>BLOG</h3></a>
<a class="footer__post" href="/2015/03/19/lean-project-management.html"><strong>The Lean Project</strong><h6 class='footer-desc'>The right recipe of team, process, communication, work environment and pride</h6></a>
<a class="footer__post" href="/2015/03/18/the-doldrums-of-consulting.html"><strong>The Doldrums of Consulting</strong><h6 class='footer-desc'></h6></a>
<a class="footer__post" href="/2015/03/16/thriving-in-a-new-work-environment.html"><strong>Thriving in a New Work Environment</strong><h6 class='footer-desc'>Learn how to go beyond expectations at your new job</h6></a></div><div class='l-footer-group'><a href="http://dockyard.com/hire-us"><h3 class='footer-group__title'>CONTACT</h3></a><h6 class='footer-desc'>DockYard HQ is located in Boston. Stop in sometime and meet our team!</h6><a class="footer__address" target="_blank" href="http://goo.gl/maps/zBGfn"><h6>DockYard Inc.<br>101 Tremont Street<br>Suite 200<br>Boston, MA 02108</h6></a>
<a class="text-link" href="http://dockyard.com/hire-us">Get in touch.</a><div class='social-links--footer'><a target="_blank" data-icon="#" class="social-link" href="https://twitter.com/dockyard"><span class='is-hidden'>Twitter</span></a>
<a target="_blank" data-icon="★" class="social-link" href="https://github.com/dockyard"><span class='is-hidden'>GitHub</span></a>
<a target="_blank" data-icon="✒" class="social-link" href="http://reefpoints.dockyard.com/atom.xml"><span class='is-hidden'>RSS</span></a></div></div></div></footer><script>
  /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
  var disqus_shortname = 'reefpoints'; // required: replace example with your forum shortname
  
  /* * * DON'T EDIT BELOW THIS LINE * * */
  (function () {
      var s = document.createElement('script'); s.async = true;
      s.type = 'text/javascript';
      s.src = 'http://' + disqus_shortname + '.disqus.com/count.js';
      (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
  }());
</script></body></html>