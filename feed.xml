<!DOCTYPE html><html><head><title>DockYard</title><link href="/stylesheets/all-c4584ad1.css" media="screen" rel="stylesheet" type="text/css" /><script src="/javascripts/all-ce68a29a.js" type="text/javascript"></script><meta content='NO-CACHE' http-equiv='CACHE-CONTROL'><meta content='DockYard is a Ruby on Rails, PostgreSQL, and, Ember.js, web / mobile application development software consultancy based in Boston, MA.' namer='description'><meta content='ruby on rails, rails, ruby, ruby on rails training, ruby application development, ruby on rails application development, ember application development, ember.js application development, software application development, web, web application development, mobile, mobile application development, ios, ios application development, iphone, iphone application development, android, android application development, postgres, startups, enterprise, Boston, MA, Massachusetts, for hire' name='keywords'><meta content='web development, mobile development, startups, enterprise, ruby on rails, rails, ruby, ruby on rails training, Boston, for hire' name='keywords'><meta content='width=device-width, initial-scale=1, maximum-scale=1, user-scalable=0' name='viewport'><meta charset='utf-8'><meta content='DockYard.com - ' name='description'><link href='//cloud.typography.com/6496052/702882/css/fonts.css' rel='stylesheet' type='text/css'><link href='http://dockyard.com/humans.txt' rel='author'><link href='/favicon.png' rel='shortcut icon' type='image/x-icon'><link href='/favicon.png' rel='icon' type='image/x-icon'><link href='/apple-touch-icon.png' rel='apple-touch-icon'><link href='/apple-touch-icon-precomposed.png' rel='apple-touch-icon-precomposed'><script>
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-24185112-2']);
    _gaq.push(['_trackPageview']);
  
    (function() {
      var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
      ga.src = ('https:' == document.location.protocol ? 'https://' : 'http://') + 'stats.g.doubleclick.net/dc.js';
      var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
    })();
</script>
<!--
                                             ..
                                           .O.
                                       .:OO.
                                      :OOO.
                                    :OOO:.
                         ...      :OOOO:
                   ..ZOOOOOOOOO..OZ.O.
                   OOOOOOOOOOOOOOOOI
                  OOOOOOOOOOOOOOOOI,
                 OOOOOOOO. .OOOOOOOO:
                 OOOOOOOO   OOOOOOOOO:
                OOOOOOOOOOOOOOOOOOOOO.
                OOOOOOOOOOOOOOOOOOOOO:
               .OOOOOOOOOOOOOOOOOOOOO:
               .OOOOOOOOOOOOOOOOOOOOO.
                OOOOOOOOOOOOOOOOOOOOO
                OOOOOO?:   .OOOOOOOOO
               .OOOOO      OOOOOOOOOO
,OO ZO,        OOOOO,     OOOOOOOOOO+
 OOOOO.        OOOOO     OOOOOOOOOOO+
  OOO?        OOOOO     .OOOOOOOOOOO:
   OOO,      OOOOO.    .OOOOOOOOOOOO
    OOOOOOOOOOOOO.    .OOOOOOOOOOOO.
     OOOOOOOOOOOO.  .OOOOOOOOOOOOO.
      8OOOOOOOOOOOOOOOOOOOOOOOODO:
         :OOOOOOOOOOOOOOOOOOOO::

--></head><body class='feed'><header><div class='extended-nav-wrap'><div class='l-wrap--wide'><nav class='extended-nav'><a class="extended-nav--logo" data-icon="⌂" href="http://dockyard.com/"><span class='is-hidden'>Home</span></a>
<a class="extended-nav--close" data-icon="X" href="#"><span class='is-hidden'>Close</span></a><div class='extended-nav__items'><div class='extended-nav__items--mobile'><a class="extended-nav__item--work extended-nav__item" href="#">Work</a><nav class='work-nav--mobile'><a href="http://dockyard.com/work/credit-card-reviews" class="work-nav-item"><strong class='work-nav-item__title'>Credit Card Reviews</strong></a>
<a href="http://dockyard.com/work/coachup" class="work-nav-item"><strong class='work-nav-item__title'>CoachUp</strong></a>
<a href="http://dockyard.com/work/askthem" class="work-nav-item"><strong class='work-nav-item__title'>AskThem</strong></a>
<a href="http://dockyard.com/work/beacon-hill-blitz" class="work-nav-item"><strong class='work-nav-item__title'>Beacon Hill Blitz</strong></a></nav></div><a class="extended-nav__item" href="http://dockyard.com/team">Our Team</a><a class="extended-nav__item" href="http://dockyard.com/process">Process</a><a class="extended-nav__item" href="http://dockyard.com/community">Community</a><a class="extended-nav__item active" href="/">Blog</a><a class="extended-nav__item" href="http://dockyard.com/hire-us">Hire Us</a></div></nav><nav class='work-nav'><h6>Selected Work</h6><a href="http://dockyard.com/work/credit-card-reviews" class="work-nav-item"><strong class='work-nav-item__title'>Credit Card Reviews</strong><p>Credit card advice from real people.</p></a>
<a href="http://dockyard.com/work/coachup" class="work-nav-item"><strong class='work-nav-item__title'>CoachUp</strong><p>You should be training. Right now.</p></a>
<a href="http://dockyard.com/work/askthem" class="work-nav-item"><strong class='work-nav-item__title'>AskThem</strong><p>Ask officials questions on city, state, and federal levels.</p></a>
<a href="http://dockyard.com/work/beacon-hill-blitz" class="work-nav-item"><strong class='work-nav-item__title'>Beacon Hill Blitz</strong><p>How technology helped repeal the #TechTax.</p></a></nav></div></div><nav class='main-nav-wrap'><div class='main-nav l-wrap--wide'><a class="logo" href="http://dockyard.com">DockYard</a><a class="club-sandwich" data-icon="☰" href="#"><span class='is-hidden'>Navigation</span></a></div></nav></header><div class='push--header'></div><div class='l-wrap--blog'><a href="/"><strong class='logo--blog'>ReefPoints</strong><strong class='logo--blog__tagline'>Blog</strong></a><nav class='blog-nav'><a class="blog-nav__item " href="/">Posts</a><a class="blog-nav__item " href="/categories.html">Categories</a><a class="blog-nav__item " href="/authors.html">Authors</a></nav></div><?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blog Name</title>
  <subtitle>Blog subtitle</subtitle>
  <id>http://blog.url.com/</id>
  <link href="http://blog.url.com/"/>
  <link href="http://blog.url.com/feed.xml" rel="self"/>
  <updated>2014-11-28T00:00:00Z</updated>
  <author>
    <name>Blog Author</name>
  </author>
  <entry>
    <title>Ember Wish List</title>
    <link rel="alternate" href="/2014/11/28/ember-wish-list.html"/>
    <id>/2014/11/28/ember-wish-list.html</id>
    <published>2014-11-28T00:00:00Z</published>
    <updated>2014-11-28T00:00:00Z</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;It&amp;#39;s getting close to Christmas and I&amp;#39;ve got a few things on my list for
Tomster Claus this year. All of my wishes are about making my
applications smaller. One of the constant complaints I see about Ember
is that it is &amp;quot;too fat&amp;quot;. You may not know this but this problem is
solveable and can actually grow alongside Ember to ensure your assets
are a slim as they can be. On to the wish list!&lt;/p&gt;

&lt;h3&gt;Tree Shaking&lt;/h3&gt;

&lt;p&gt;Are you familiar with Tree Shaking? The concept is simple, a dependency
graph of your application is built. Let&amp;#39;s say one of your files requires
&lt;code&gt;A&lt;/code&gt;, &lt;code&gt;B&lt;/code&gt;, and &lt;code&gt;C&lt;/code&gt;. And &lt;code&gt;A&lt;/code&gt; requires &lt;code&gt;D&lt;/code&gt;, and &lt;code&gt;F&lt;/code&gt;. And &lt;code&gt;C&lt;/code&gt; required &lt;code&gt;F&lt;/code&gt;.
Currently with Ember CLI all files for all of your dependencies will get
included in the final build. So if there is an &lt;code&gt;E&lt;/code&gt; file it will be in
the final build even if you are not using it in any way, this is wasteful.
With ES6 the dependency graph can be built between your files, any files
that are not in the graph are not included in the final built. They are
&amp;quot;shaken&amp;quot; out of the build process. This means a smaller footprint for your assets.&lt;/p&gt;

&lt;p&gt;There are two major hurdles to implementing this in Ember CLI right now.
The first is that doing a static analysis on the dependency graph may
result in false positives of what files to ignore for the build. While
there are many files that you are depending upon via the &lt;code&gt;import&lt;/code&gt;
statement:&lt;/p&gt;
&lt;div class="highlight javascript "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;&lt;span class="reserved"&gt;import&lt;/span&gt; { foo, bar } from &lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;baz&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;;
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;This is very easy to parse. But your application can also import
resources via the Ember Resolver:&lt;/p&gt;
&lt;div class="highlight javascript "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;container.lookup(&lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;model:foo&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;);
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;A few levels down a &lt;code&gt;resolveOther&lt;/code&gt; function is called and &lt;code&gt;lookup&lt;/code&gt; is
turned into a &lt;code&gt;require&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight javascript "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;require(&lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;my-app/models/foo&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;);
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;parsing this out is not as simple. We could just assume everything in
the app&amp;#39;s namespace should be part of the final build, but when other
libraries are doing more complex tricks with importing this presents a
problem. For example, in the latest version of Ember Validations the
validators themselves live in the &lt;code&gt;ember-validations&lt;/code&gt; namespace. You can
override validators by placing them in your namespace. The lookup is
something like this:&lt;/p&gt;
&lt;div class="highlight javascript "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
2
3
4
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;&lt;span class="keyword"&gt;function&lt;/span&gt; &lt;span class="function"&gt;lookupValidator&lt;/span&gt;(name) {
  &lt;span class="keyword"&gt;return&lt;/span&gt; container.lookup(&lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;validator:&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;+name) ||
    container.lookup(&lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;ember-validations@validator:&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;+name);
}
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;How do we properly parse this out to include the correct validators in
the dependency graph? One solution might be for library authors to
declare which files should always be included in the final build, but
this defeats the purpose of only including what is being used. If the
application is using the Presence Validator but not the Inclusion
Validator why would I want those extra LOCs?&lt;/p&gt;

&lt;p&gt;The other major hurdle is Ember itself. While Ember&amp;#39;s source is in ES6
form the final build that you get is in AMD. Which means it is one file.
Ember will have to be distributed in the original ES6 form. I am also
not a fan of the current package names. If this ever happens I would
much prefer:&lt;/p&gt;
&lt;div class="highlight javascript "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;&lt;span class="reserved"&gt;import&lt;/span&gt; Component from &lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;ember/component&lt;/span&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;/span&gt;;
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;rather than&lt;/p&gt;
&lt;div class="highlight javascript "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;&lt;span class="reserved"&gt;import&lt;/span&gt; Component from &lt;span class="error"&gt;`&lt;/span&gt;ember-views/views/component&lt;span class="string"&gt;&lt;span class="delimiter"&gt;'&lt;/span&gt;&lt;span class="content"&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;h3&gt;Separate builds&lt;/h3&gt;

&lt;p&gt;Ember CLI is all or nothing right now. Which means that you have a
single build pipeline for your application assets (&lt;code&gt;app-name.js&lt;/code&gt;) and a single build
pipeline for 3rd party assets (&lt;code&gt;vendor.js&lt;/code&gt;). It would be nice to define
additional assets that can be built into final files. For example, &lt;a href="https://github.com/dockyard/ember-admin/issues/32"&gt;this
request for Ember
Admin&lt;/a&gt;. Technically
this could be done right now but it would require some heavy hacking of
the vendor asset pipeline in Ember CLI. Personally I would like to see
an API for this specifically. Perhaps it could be in the form of isolating a namespace to
be ignored in the &lt;code&gt;vendor.js&lt;/code&gt; final concat but still output in the
&lt;code&gt;dist/&lt;/code&gt; directory.&lt;/p&gt;

&lt;h3&gt;Async code loading&lt;/h3&gt;

&lt;p&gt;This wish dove-tails off the previous one. Now that we have our separate
assets how do we safely load them into our Ember apps? If we are
isolating the assets I would think this implies they aren&amp;#39;t meant for
consumption at application launch. Going back to the Ember Admin
example, not all users need those LOCs. Only when an authorized user
hits the admin functionality should it pull down the Ember Admin assets
and plug into the app. This would be ideal. The major hurdle here is
with how the container currently works. Perhaps something like this
could put it on the right track:&lt;/p&gt;
&lt;div class="highlight javascript "&gt;&lt;div class="ribbon"&gt;&lt;/div&gt;&lt;div class="scroller"&gt;&lt;table class="CodeRay"&gt;&lt;tr&gt;
  &lt;td class="line-numbers"&gt;&lt;pre&gt;1
2
3
4
5
6
7
8
9
&lt;strong&gt;10&lt;/strong&gt;
11
12
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class="code"&gt;&lt;pre&gt;&lt;span class="function"&gt;resolveOther&lt;/span&gt;: &lt;span class="keyword"&gt;function&lt;/span&gt;(name) {
  &lt;span class="keyword"&gt;if&lt;/span&gt; (needAsyncLoad(name)) {
    asyncLoad(name).then(&lt;span class="keyword"&gt;function&lt;/span&gt;() {
      &lt;span class="comment"&gt;// after this load completes the name&lt;/span&gt;
      &lt;span class="comment"&gt;// would be removed from the list of&lt;/span&gt;
      &lt;span class="comment"&gt;// resources requiring async loading&lt;/span&gt;
      resolveOther(name);
    }
  } &lt;span class="keyword"&gt;else&lt;/span&gt; {
    &lt;span class="keyword"&gt;return&lt;/span&gt; require(name);
  }
}
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;This would allow even further shrinking of the initial applicaiton
footprint. Only include what is necessary, async load other assets. This
creates the illusion of speed which is just as good as actual speed. You
will have the trade-off of periodic sections of your app with a longer
than normal loading state, but that should only happen once per
application instance.&lt;/p&gt;

&lt;h3&gt;Wishes to reality&lt;/h3&gt;

&lt;p&gt;Fulfilling these wishes should go a long way to negating the &amp;quot;too fat&amp;quot; argument for
Ember. Here&amp;#39;s to hoping that 2015 will see a more lean Tomster.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>UX East Camp 2014</title>
    <link rel="alternate" href="/2014/11/18/we-did-it.html"/>
    <id>/2014/11/18/we-did-it.html</id>
    <published>2014-11-18T00:00:00Z</published>
    <updated>2014-11-18T00:00:00Z</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;&lt;a href="http://uxeast.org/" title="UX East Camp"&gt;We did it.&lt;/a&gt; This weekend went far better than we ever could have imagined. We’re grateful and maybe a tad bit emotional, so bear with us.&lt;/p&gt;

&lt;p&gt;The camp was initially intended as somewhat of a proof of concept, but became something much more real than that. Beyond proving that we are all willing to spend 3 days living with complete strangers, we experienced the unique value of the connections, friendships, and mentoring that this style of event facilitated. It turns out that the people who pay good money for and spend a whole weekend on such a unique social and learning environment are exactly the type of people who make it worthwhile. The need to learn, share, and be challenged by their peers is in their blood. This is who they are, and they’re the people we want to bring together.&lt;/p&gt;

&lt;p&gt;It goes without saying: &lt;a href="https://twitter.com/michelleyaiser" title="Michelle Yaiser"&gt;Michelle&lt;/a&gt;, &lt;a href="https://twitter.com/StayingInDroves" title="Ed King"&gt;Ed&lt;/a&gt;, &lt;a href="https://twitter.com/CalamityJD" title="JD Jordan"&gt;JD&lt;/a&gt;, and &lt;a href="https://twitter.com/benjordan" title="Ben Jordan"&gt;Ben&lt;/a&gt; did much more than they were asked to and were the core of what made the camp so great. They shared their wisdom, challenged us to solve hilariously weird and unique problems, guided us, and befriended us. They poured their hearts into this and we are proud and humbled to have had them for our first UX East Camp.&lt;/p&gt;

&lt;p&gt;The event was a risk, but the speakers and attendees overwhelming proved to us that it can and should be done. So we’re going to do it again.&lt;/p&gt;

&lt;p&gt;See you next year at UX East Camp, Spring 2015.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Rubygems.org Redesign</title>
    <link rel="alternate" href="/2014/11/18/rubygems-redesign.html"/>
    <id>/2014/11/18/rubygems-redesign.html</id>
    <published>2014-11-18T00:00:00Z</published>
    <updated>2014-11-18T00:00:00Z</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;&lt;img src="/images/rubygems-redesign.png" alt="rubygems-redesign.png"&gt;&lt;/p&gt;

&lt;p&gt;Today I am very proud to announce that the DockYard-led redesign of
&lt;a href="http://rubygems.org"&gt;rubygems.org&lt;/a&gt; has been launched.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://rubycentral.org"&gt;Ruby Central&lt;/a&gt; just announced and put into production a redesign of Ruby&amp;#39;s
most popular community website during the Lightning Talk session at
&lt;a href="http://rubyconf.org"&gt;RubyConf 2014&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The redesign effort was led by &lt;a href="https://twitter.com/LoganFaerber"&gt;Logan
Faerber&lt;/a&gt; and built out by &lt;a href="https://twitter.com/acacheung"&gt;Amanda
Cheung&lt;/a&gt;. You can see how happy it has
made them.&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/hooray-rubygems.jpg" alt="hooray-rubygems"&gt;&lt;/p&gt;

&lt;p&gt;We would have been lost without the guidance from Ruby Central folks &lt;a href="https://twitter.com/evanphx"&gt;Evan
Phoenix&lt;/a&gt;,
&lt;a href="https://twitter.com/dwradcliffe"&gt;David Radcliffe&lt;/a&gt;, &lt;a href="https://twitter.com/indirect"&gt;André Arko&lt;/a&gt;. As well as some insight from &lt;a href="http://twitter.com/qrush"&gt;Nick Quaranto&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We were very fortunate to have been selected. We hope that everyone
enjoys the new look!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>My project for UX Camp</title>
    <link rel="alternate" href="/2014/11/12/bring-to-ux-east.html"/>
    <id>/2014/11/12/bring-to-ux-east.html</id>
    <published>2014-11-12T00:00:00Z</published>
    <updated>2014-11-12T00:00:00Z</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;This weekend, I am heading to &lt;a href="http://uxeast.org/"&gt;UX East&amp;#39;s camp&lt;/a&gt; in Maine. It is kind of like a conference, except you also get the opportunity to work on your own project and get feedback from others while there. I am helping organize the event, and a large chunk of my time will be spent taking photos and helping with other random tasks, so I wanted to bring a project that’s small and easy to manage.&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/post-assets/maria/ux-east-sketches.jpg" alt=""&gt;&lt;/p&gt;

&lt;p&gt;My project is practicing how to quickly sketch ideas by hand.&lt;/p&gt;

&lt;p&gt;When I first started as a UX Designer at &lt;a href="http://dockyard.com/"&gt;DockYard&lt;/a&gt;, I noticed how confident the other designers were at sketching. &lt;a href="http://dockyard.com/team#logan-faerber"&gt;Logan&lt;/a&gt; just happens to be a &lt;a href="https://dribbble.com/shots/1765074-UX-East-Icons?list=users&amp;amp;offset=3"&gt;kickass illustrator&lt;/a&gt;, which helps. But still, I felt like I lacked confidence in comparison. I’ve been trying to improve, but had not tried anything focused on sketching specifically yet.&lt;/p&gt;

&lt;h2&gt;Why is sketching useful?&lt;/h2&gt;

&lt;p&gt;Sketching is a great tool not only to produce work deliverable to the client (hand drawn wireframes are often part of the Discovery phase in our work) but also a way to think more clearly. If I can articulate an idea through a drawing, I have a good understanding of it. In the process of drawing something out, I also find the fuzzy areas that need more definition, and I am able to ask better questions as a result.&lt;/p&gt;

&lt;p&gt;Writing on a subject is similar to this exploratory sketching. By trying to write on a subject, I find unexplained pieces, and am forced to form my thoughts clearly. But writing only uses one aspect of an idea. Visuals are something else. I want to rely on both verbal (writing) and visual (drawing) thinking in my work.&lt;/p&gt;

&lt;h2&gt;How to practice?&lt;/h2&gt;

&lt;p&gt;I decided to focus on practicing only the skill to express a single idea through a very simple drawing. As an art supply enthusiast, it is easy for me to get carried away in selecting just the right pen, paper or color for a project. To counter this, I limited my tools: a clipboard, a single medium-weight black marker, and a sizable stack of half-sheets of printer paper.&lt;/p&gt;

&lt;p&gt;I further limited possible distractions by deciding not to focus on high quality, thoughtful drawings, and instead produce many simple drawings. For this reason, I will also not look for great reference material, but try to just get the visual idea down on paper quickly instead.&lt;/p&gt;

&lt;p&gt;I will also focus on actually drawing, rather than annotating. In the few practice drawings I made so far I resorted to writing the details I could not get into the drawing. It would be great to get away from this.&lt;/p&gt;

&lt;p&gt;When I finish one of these simple drawings, I will slide it to the bottom of the stack so I’m ready to start another one. I will not focus on judging the results too quickly.&lt;/p&gt;

&lt;p&gt;At camp, I might share the drawings I make, and ask for feedback on how to make them more clear. Will they make sense? With some practice, I hope that they do.&lt;/p&gt;

&lt;p&gt;So, here’s what I am working on. Pretty simple, and should be fun! I also asked a couple of colleagues what they are planning to do — and here it is:&lt;/p&gt;

&lt;h2&gt;What Steve is working on&lt;/h2&gt;

&lt;p&gt;He&amp;#39;s going to work on a video game idea that originally started as a web-comic at DockYard. In addition to that he&amp;#39;s taking a look at some various prototyping tools (as well exploring InVision a little deeper).&lt;/p&gt;

&lt;h2&gt;What  Tim is working on&lt;/h2&gt;

&lt;p&gt;Tim has been working on a typeface that is targeted to be both practical and highly legible. He&amp;#39;s hoping to gain some feedback from fellow campers and continue chipping away at the lowercase letterforms.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Pitch This</title>
    <link rel="alternate" href="/2014/11/07/pitch-this.html"/>
    <id>/2014/11/07/pitch-this.html</id>
    <published>2014-11-07T00:00:00Z</published>
    <updated>2014-11-07T00:00:00Z</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;Here is something I probably shouldn&amp;#39;t be admitting: I can&amp;#39;t put
together a sales pitch for my own company.&lt;/p&gt;

&lt;p&gt;It&amp;#39;s not that I don&amp;#39;t know what we do, I am intimately familiar with
what we do. It&amp;#39;s not that I don&amp;#39;t believe in us, in fact we
have big growth plans for the next 3 years and I am certain we&amp;#39;ll meet
them. It&amp;#39;s just that I find it incredibly difficult to describe to
others in an &amp;quot;elevator pitch&amp;quot; what a software consultancy can offer
without going down the &amp;quot;technology&amp;quot; rabbit hole.&lt;/p&gt;

&lt;p&gt;The exercise is: &lt;em&gt;if I were introduced to someone at a party, how do I convince them they should 
hire DockYard&lt;/em&gt;? Funny enough, I can&amp;#39;t do it. This is a very large
deficiency for me/my company right now. To date &lt;strong&gt;all&lt;/strong&gt; of our
contracts have been from inbound sales. Which is great, but we need to
be able to sell our services to companies that don&amp;#39;t yet know about us.&lt;/p&gt;

&lt;p&gt;So what does DockYard do? According to our current landing page &lt;em&gt;We
create web &amp;amp; mobile applications&lt;/em&gt;. Which is 100% true, but if I told
this to you I doubt you&amp;#39;d hire us. I asked other DockYard&amp;#39;ers to try
their hand at writing the DY pitch. To illustrate how difficult this is
here is what they came up with:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;DockYard designs and develops applications for people who have an idea and don&amp;#39;t know what to do next&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;We build web products, and focus on quality.&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;We create software that helps people. A client can come to us seeking advice regarding software development practices or looking to implement a product he/she has been thinking about. Our main focus is delivering a solution that a client is happy with by using powerful visual design, best software engineering practices and latest technologies.&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;We&amp;#39;re a design and development shop specializing in really intuitive, responsive user interfaces. We work primarily with Ember.js, which is a JavaScript framework similar to Angular and Backbone. On the backend, we prefer a Rails backend and transactional database, which is more reliable than the NoSQL databases out there.&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;DockYard leads projects from ideas to user-friendly products that are built by cutting edge technologies and methodologies. As a team, we put clients&amp;#39; business goals in the forefront through the collaborative expertise of our designers and developers.&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;DockYard helps business owners create web apps with the combined power of Ember and great design.&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;We&amp;#39;re a team of software designers and engineers deeply invested in producing the best solution to a challenge, rather than just the one that works.&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;We do a lot of research before we start designing, so our projects are thought through. Designers have a lot of say in what we actually build, compared to other shops, so it makes the work more meaningful.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Some of these go beyond the scope of a &amp;quot;pitch&amp;quot; but I think the message is clear: this is not an easy assignment. 
The common theme is the focus on our expertise, which is a good angle. Expertise has been what defines DockYard.
But do all companies care about &lt;strong&gt;how&lt;/strong&gt; we build? &lt;/p&gt;

&lt;p&gt;Currently nearly all of our clients get in touch with us because
of our expertise in Ember.js. At that point the sale is
actually quite easy. There aren&amp;#39;t a lot of consultancies right now
claiming expertise in Ember. Amongst those firms I believe that
DockYard is considered one of the top. So by the time the client
contacts us they have probably already decided to go with us. This is
great but it paints us into a niche. We&amp;#39;re missing out on the other
99.99% of the opportunities that don&amp;#39;t know about us.&lt;/p&gt;

&lt;p&gt;So how do some other software consultancies pitch? I don&amp;#39;t know if it is
fair to use the marketing tagline from their website as their &amp;quot;pitch&amp;quot;
but I think it is close enough for the purposes of this article. Let&amp;#39;s
take a look:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Thoughtworks&lt;/strong&gt; &lt;em&gt;We provide software delivery, pioneering tools and
consulting for organizations with ambitious missions.&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Pivotal Labs&lt;/strong&gt; &lt;em&gt;We transform how the world builds software.&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;thoughtbot&lt;/strong&gt; &lt;em&gt;Our clients hire us to design and build their
products. We focus on user outcomes and simplicity. We write code for
iOS, Android, and the web.&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;37signals&lt;/strong&gt; &lt;em&gt;an elite team of expert web design and usability
specialists dedicated to simple, clear, and useable customer-focused
design.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I don&amp;#39;t know if this really helps me or confuses me even more. These are
all over the place, from general, to technology specific, to downright
vague. Each of these companies have been very successful. How much of
their success do they owe to their sales pitches? &lt;strong&gt;37signals&lt;/strong&gt; (when
they were a consultancy) was famous for being a referral based business.
(or at least advertising themselves as such) I don&amp;#39;t know &lt;strong&gt;thoughtbot&lt;/strong&gt;
as well as I used to but I believe they still don&amp;#39;t have any internal
sales team. &lt;strong&gt;Thoughtworks&lt;/strong&gt; and &lt;strong&gt;Pivotal&lt;/strong&gt; both have sales/biz-dev
teams. Their marketing lines are very vague, very &amp;quot;wide-net&amp;quot;. No help
here.&lt;/p&gt;

&lt;p&gt;It&amp;#39;s sad to say but I am currently at a loss on how to effectively sell my own company. &lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Motivation vs Discipline</title>
    <link rel="alternate" href="/2014/10/30/motivation-vs-discipline.html"/>
    <id>/2014/10/30/motivation-vs-discipline.html</id>
    <published>2014-10-30T00:00:00Z</published>
    <updated>2014-10-30T00:00:00Z</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;We&amp;#39;ve all seen the &lt;strong&gt;Motivational Posters&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/motivational-1.jpg" alt="Motivate"&gt;&lt;/p&gt;

&lt;p&gt;I always hear people talk about
&lt;strong&gt;motivation&lt;/strong&gt;. &lt;em&gt;What motivates you?&lt;/em&gt; &lt;em&gt;I&amp;#39;m lacking motivation.&lt;/em&gt; Well I&amp;#39;m
here to tell you that motivation is bullshit.&lt;/p&gt;

&lt;p&gt;Motivation may get you to take on a task or behavior that you don&amp;#39;t
normally do but eventually that motivation will either not be there any
more or won&amp;#39;t be effective. Then you&amp;#39;ll slip, and you justify it by
thinking &lt;em&gt;&amp;quot;well I just lacked proper motivation&amp;quot;&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Motivation&lt;/em&gt; as a concept is a cop-out. If you feel that you need
motivation to accomplish your goals you will likely fail over the
long-term. Instead you should be looking toward discipline.&lt;/p&gt;

&lt;p&gt;There is a saying &lt;em&gt;&amp;quot;it takes 3 weeks for a new behavior to become
habit&amp;quot;&lt;/em&gt;. If you haven&amp;#39;t heard that before that&amp;#39;s OK because it isn&amp;#39;t
true. According to research it actually takes &lt;a href="http://www.huffingtonpost.com/james-clear/forming-new-habits_b_5104807.html"&gt;on average 66 days of
continual behavior to form a
habit&lt;/a&gt;.
So ask yourself this. Can you use the same motivation for 66 days in a
row? If not, do you have that many different forms of motivation to form this
new habit over this period of time? I don&amp;#39;t think many of us do.&lt;/p&gt;

&lt;p&gt;Discipline on the otherhand is you saying to yourself &lt;em&gt;&amp;quot;I will do this
even if I would prefer to do something else&amp;quot;&lt;/em&gt;. It&amp;#39;s not an easy trait to
establish but if you can do so you&amp;#39;ll find that making changes happen
more easily. I think many of us have a &lt;em&gt;will&lt;/em&gt; to overcome existing habits and
form new ones but we lack the &lt;em&gt;way&lt;/em&gt; to do so. Too many distractions, too
many opportunities, too many excuses. Take a look at successful people
around you. Ask yourself are they successful because of some outside
motivation or are they successful because they&amp;#39;ve made a conscious
decision they&amp;#39;re going to wade through the muck to get what they want.&lt;/p&gt;

&lt;p&gt;Focus on being disciplined instead of waiting to be motivated. &lt;/p&gt;
</content>
  </entry>
</feed>
<div class='push--footer'></div><footer><div class='l-wrap'><div class='l-footer-group'><h3 class='footer-group__title'>EVENTS</h3><a class="footer__event--wgc" target="_blank" href="http://wickedgoodember.com/">Wicked Good Ember Conf</a><a class="footer__event--ember" target="_blank" href="http://www.meetup.com/Boston-Ember-js/">Boston Ember.js Meetup</a><a class="footer__event--openhack" target="_blank" href="http://openhack.github.io/boston/">OpenHack Boston</a><a class="footer__event--ux" target="_blank" href="http://www.meetup.com/uxboston/">UX Boston Meetup</a><a class="footer__event--swift" target="_blank" href="http://www.meetup.com/Boston-Swift/">Boston Swift</a><a class="footer__event--uxhh" target="_blank" href="http://www.uxhappyhour.com/bos">UX Happy Hour</a></div><div class='l-footer-group'><a href="/"><h3 class='footer-group__title'>BLOG</h3></a>
<a class="footer__post" href="/2014/11/28/ember-wish-list.html"><strong>Ember Wish List</strong><h6 class='footer-desc'></h6></a>
<a class="footer__post" href="/2014/11/18/we-did-it.html"><strong>UX East Camp 2014</strong><h6 class='footer-desc'></h6></a>
<a class="footer__post" href="/2014/11/18/rubygems-redesign.html"><strong>Rubygems.org Redesign</strong><h6 class='footer-desc'></h6></a></div><div class='l-footer-group'><a href="http://dockyard.com/hire-us"><h3 class='footer-group__title'>CONTACT</h3></a><h6 class='footer-desc'>DockYard HQ is located in Boston. Stop in sometime and meet our team!</h6><a class="footer__address" target="_blank" href="http://goo.gl/maps/zBGfn"><h6>DockYard Inc.<br>101 Tremont Street<br>Suite 200<br>Boston, MA 02108</h6></a>
<a class="text-link" href="http://dockyard.com/hire-us">Get in touch.</a><div class='social-links--footer'><a target="_blank" data-icon="#" class="social-link" href="https://twitter.com/dockyard"><span class='is-hidden'>Twitter</span></a>
<a target="_blank" data-icon="★" class="social-link" href="https://github.com/dockyard"><span class='is-hidden'>GitHub</span></a>
<a target="_blank" data-icon="✒" class="social-link" href="http://reefpoints.dockyard.com/atom.xml"><span class='is-hidden'>RSS</span></a></div></div></div></footer><script>
  /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
  var disqus_shortname = 'reefpoints'; // required: replace example with your forum shortname
  
  /* * * DON'T EDIT BELOW THIS LINE * * */
  (function () {
      var s = document.createElement('script'); s.async = true;
      s.type = 'text/javascript';
      s.src = 'http://' + disqus_shortname + '.disqus.com/count.js';
      (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
  }());
</script></body></html>